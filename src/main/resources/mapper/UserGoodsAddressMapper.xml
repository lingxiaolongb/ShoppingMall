<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itlong.mapper.UserGoodsAddressMapper">
  <resultMap id="BaseResultMap" type="com.itlong.bean.UserGoodsAddress">
    <id column="ugd_id" jdbcType="VARCHAR" property="ugdId" />
    <result column="consignee" jdbcType="VARCHAR" property="consignee" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="detailed_address" jdbcType="VARCHAR" property="detailedAddress" />
    <result column="zip_code" jdbcType="CHAR" property="zipCode" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="default_address" jdbcType="TINYINT" property="defaultAddress" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_goods_address
    where ugd_id = #{ugdId,jdbcType=VARCHAR} and user_id=#{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.itlong.bean.UserGoodsAddress">
    insert into user_goods_address (ugd_id, consignee, location, 
      detailed_address, zip_code, phone, 
      user_id, default_address)
    values (#{ugdId,jdbcType=VARCHAR}, #{consignee,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{detailedAddress,jdbcType=VARCHAR}, #{zipCode,jdbcType=CHAR}, #{phone,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{defaultAddress,jdbcType=TINYINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.itlong.bean.UserGoodsAddress">
    update user_goods_address
    set consignee = #{consignee,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      detailed_address = #{detailedAddress,jdbcType=VARCHAR},
      zip_code = #{zipCode,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      default_address = #{defaultAddress,jdbcType=TINYINT}
    where ugd_id = #{ugdId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select ugd_id, consignee, location, detailed_address, zip_code, phone, user_id, default_address
    from user_goods_address
    where ugd_id = #{ugdId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select ugd_id, consignee, location, detailed_address, zip_code, phone, user_id, default_address
    from user_goods_address
  </select>

    <!-- 1.利用用户id 查询收货id 返回字符串数组-->
    <select id="selectUgdId" resultType="java.lang.String">
        select ugd_id
        from user_goods_address
        where user_id=#{userId}
    </select>
    <!--2.查询收货地址数量-->
    <select id="selectRow" resultType="int">
        select count(*)
        from user_goods_address
        where user_id=#{userId}
    </select>

    <!-- 3.利用用户id查找收货地址-->
    <select id="selectByUserId" resultMap="BaseResultMap">
        select ugd_id, consignee, location, detailed_address, zip_code, phone, user_id, default_address
        from user_goods_address
        where user_id=#{userId}
        order by default_address desc
    </select>

    <!-- 4.根据默认地址查找收货地址修改-->
    <select id="selectByDefaultAddress" resultMap="BaseResultMap">
        select ugd_id, consignee, location, detailed_address, zip_code, phone, user_id, default_address
        from user_goods_address
        where user_id=#{userId} and default_address=1
    </select>

    <!-- 5.更新默认地址(多余)-->
   <update id="updateDefaultAddress" parameterType="UserGoodsAddress">
       update user_goods_address
       set consignee = #{consignee,jdbcType=VARCHAR},
           location = #{location,jdbcType=VARCHAR},
           detailed_address = #{detailedAddress,jdbcType=VARCHAR},
           zip_code = #{zipCode,jdbcType=CHAR},
           phone = #{phone,jdbcType=VARCHAR},
           user_id = #{userId,jdbcType=VARCHAR},
           default_address = #{defaultAddress,jdbcType=TINYINT}
           where ugd_id = #{ugdId,jdbcType=VARCHAR} and user_id=#{userId,jdbcType=VARCHAR}
   </update>


</mapper>